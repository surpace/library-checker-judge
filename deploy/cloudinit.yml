#cloud-config

# Ubuntu 18.04

timezone: Asia/Tokyo
locale: ja_JP.utf8

users:
  - name: library-checker-user
    uid: 2000

packages:
  - cgroup-tools
  - supervisor
  - postgresql-client
  - unzip
  # compilers
  - g++
  - golang-go
  - default-jdk
  - default-jre
  - python3-pip
  - python3.8
  - python3.8-dev
  - pypy3
  - ldc
  - rustc
  - cargo
  - sbcl
  - ghc
  - haskell-stack
  
write_files:
  - path: /etc/default/grub.d/99-lib-judge.cfg
    owner: root:root
    content: GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX_DEFAULT swapaccount=1"

  - path: /etc/supervisor/conf.d/judge._conf
    owner: root:root
    permissions: '0600'
    content: |
      [program:judge]
      command=/root/library-checker-judge/judge/judge
      environment=CASEDIR="/tmp",TMPDIR="/ramdisk"
      autorestart=true
      stdout_logfile=/root/judge.log
      stderr_logfile=/root/judge-err.log
      user=root
      directory=/root/library-checker-judge/judge/
      startsecs=10
      startretries=300

  - path: /var/lib/cloud/scripts/per-boot/judge-launch.sh
    owner: root:root
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      if [[ -f /root/init_end ]]; then
        echo "Second Time"
        mount -t tmpfs -o size=4g /dev/shm /ramdisk
        touch /root/can_start
      else
        echo "First Time"
        mkdir /ramdisk
        touch /root/init_end
      fi

  - path: /var/haskell_load.hs
    owner: root:root
    permissions: '0644'
    content: |
      import Data.Array                    -- array
      import Data.ByteString               -- bytestring
      import Data.Set                      -- container
      import Control.DeepSeq               -- deeqseq
      import Data.Hashable                 -- hashable
      import Data.Heap                     -- heaps
      import System.IO.Streams             -- io-streams
      import Control.Lens                  -- lens
      import Data.Massiv.Array             -- massiv
      import Data.Containers               -- mono-traversable
      import Control.Monad.State           -- mtl
      import System.Random                 -- random
      import Data.Strict                   -- strict
      import Data.Text                     -- text
      import Control.Monad.Trans.Class     -- transformers
      import Data.Vector                   -- vector
      import Data.Vector.Algorithms.Search -- vector-algorithms
      import Data.Char8                    -- word8

      main = do return ()

runcmd:
  - update-grub
  - python3.8 -m pip install --upgrade pip
  # install minio, grpc
  - python3.8 -m pip install minio grpcio-tools
  # install docker, docker-compose
  - curl -fsSL https://get.docker.com -o get-docker.sh; sh get-docker.sh
  - curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  # install numpy, scipy
  - python3.8 -m pip install --upgrade numpy scipy
  # install haskell-stack
  - HOME=/root stack upgrade --binary-only
  - |
    su -c """
    stack install --resolver lts-16.7 array bytestring containers deepseq hashable heaps io-streams lens mutable-containers massiv mono-traversable mtl random strict text transformers vector vector-algorithms word8 &&
    cp /var/haskell_load.hs /tmp/haskell_load.hs &&
    cd ~ && stack ghc -- /tmp/haskell_load.hs
    """ -- library-checker-user
  # install C#
  - wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
  - apt-get install -y  ./packages-microsoft-prod.deb
  - add-apt-repository universe
  - apt-get install -y apt-transport-https
  - apt-get update
  - apt-get install -y dotnet-sdk-3.1
  - |
    su -c """
    dotnet new console -o /tmp/C-Sharp -lang \"C#\" &&
    sed -i -e '/<PropertyGroup>/a <AllowUnsafeBlocks>true</AllowUnsafeBlocks>' /tmp/C-Sharp/C-Sharp.csproj &&
    dotnet add /tmp/C-Sharp package System.Runtime.CompilerServices.Unsafe -v 4.6.0 &&
    dotnet restore /tmp/C-Sharp -r ubuntu.18.04-x64
    """ -- library-checker-user
  - cp -r /tmp/C-Sharp /opt/C-Sharp
  # install Ruby
  - wget -q https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.1.tar.gz -O ruby-2.7.1.tar.gz
  - tar xf ruby-2.7.1.tar.gz
  - cd ruby-2.7.1
  - ./configure
  - make
  - make check
  - |
    su -c """
    make install
    """ -- library-checker-user




power_state:
  mode: reboot
  timeout: 15
