[[langs]]
    id = "checker"
    source = "checker.cpp"    
    compile = "g++ -O2 -std=c++14 -DEVAL -march=native -o checker checker.cpp"
[[langs]]
    id = "cpp"
    name = "C++17"
    version = "g++(ubuntu20.04 apt)"
    source = "main.cpp"    
    compile = "g++ -O2 -std=c++17 -DEVAL -march=native -o main main.cpp"
    exec = "./main"
[[langs]]
    id = "cpp14"
    name = "C++14"
    version = "g++(ubuntu20.04 apt)"
    source = "main.cpp"
    compile = "g++ -O2 -std=c++14 -march=native -o main main.cpp"
    exec = "./main"
[[langs]]
    id = "rust"
    name = "Rust"
    version = "rustc(ubuntu20.04 apt)"
    source = "main.rs"
    compile = "rustc -O main.rs"
    exec = "./main"
[[langs]]
    id = "d"
    name = "LDC2"
    version = "LDC2 1.15.0"
    source = "main.d"
    compile = "ldc2 -O -release main.d"
    exec = "./main"
[[langs]]
    id = "java"
    name = "Java"
    version = "default-jdk(ubuntu20.04 apt)"
    source = "Main.java"
    compile = "javac Main.java"
    exec = "java -Xss1G Main"
[[langs]]
    id = "python3"
    name = "Python3"
    version = "python3.8 + numpy + scipy (ubuntu20.04 apt)"
    source = "main.py"
    compile = "sh -c \"echo | python3.8 -c 'import main.py' || :\""
    exec = "python3.8 main.py"
[[langs]]
    id = "pypy3"
    name = "PyPy3"
    version = "pypy3.6-v7.1.1"
    source = "main.py"
    compile = "pypy3 -c 'print(1)'"
    exec = "pypy3 main.py"
[[langs]]
    id = "ruby"
    name = "Ruby"
    version = "ruby 2.7.1"
    source = "main.rb"
    compile = "ruby -wc ./main.rb"
    exec = "bash -c 'RUBY_THREAD_VM_STACK_SIZE=268435456 ruby ./main.rb'"
[[langs]]
    id = "haskell"
    name = "GHC"
    version = "ghc + stack (ubuntu20.04 apt)"
    source = "main.hs"
    compile = "stack ghc -- main.hs -O2"
    exec = "./main"
[[langs]]
    id = "csharp"
    name = "C#"
    version = "C# 8.0(dotnet 3.1)"
    source = "main.cs"
    compile = 'sh -c "cp -r /opt/C-Sharp C-Sharp && cp main.cs C-Sharp/Program.cs && HOME=/home/library-checker-user dotnet publish C-Sharp -c Release -r ubuntu.18.04-x64 /p:PublishReadyToRun=true -o bin"'
    exec = "./bin/C-Sharp"
[[langs]]
    id = "go"
    name = "Go"
    version = "Go(ppa:longsleep/golang-backports)"
    source = "main.go"
    compile = "go build main.go"
    exec = "./main"
[[langs]]
    id = "lisp"
    name = "Common Lisp"
    version = "sbcl(ubuntu20.04 apt)"
    source = "main.lisp"
    compile = 'sbcl --noinform --eval "(compile-file \"main.lisp\")" --quit'
    exec = "sbcl --control-stack-size 1GB --script main.fasl"
